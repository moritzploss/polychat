# auto detects a good number of processes to run
worker_processes auto;

#Provides the configuration file context in which the directives that affect connection processing are specified.
events {
    # Sets the maximum number of simultaneous connections that can be opened by a worker process.
    worker_connections 8000;
    # Tells the worker to accept multiple connections at a time
    multi_accept on;
}

http {
    # what times to include
    include       /etc/nginx/mime.types;
    # what is the default one
    default_type  application/octet-stream;

    # Sets the path, format, and configuration for a buffered log write
    log_format compression '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $upstream_addr '
        '"$http_referer" "$http_user_agent"';

    upstream backend {
      server localhost:8888;
    }

    map $http_upgrade $connection_upgrade {
      default upgrade;
      '' close;
    }

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name polychat.live www.polychat.live;
        return 301 https://$server_name$request_uri;
    }
 
    server {
        add_header Strict-Transport-Security "max-age=120; includeSubDomains" always;

        listen 443 ssl http2;
        # ssl_certificate ./ssl_cert/ssl-bundle.crt;
        # ssl_certificate_key ./ssl_cert/example.key;
        # server_name polychat.live;

        # listen on port 80
        # listen 80;

        # save logs here
        access_log /var/log/nginx/access.log compression;

        # where the root here
        root /var/www;
        # what file to server as index
        index index.html index.htm;

        location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to redirecting to index.html
            try_files $uri $uri/ /index.html;
        }

        location /api/websockets/clients {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location /api {
            proxy_pass http://backend;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_buffering off;
        }

        # Media: images, icons, video, audio, HTC
        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
            expires 1M;
            access_log off;
            add_header Cache-Control "public";
            add_header Strict-Transport-Security "max-age=120; includeSubDomains" always;
        }

        # Javascript and CSS files
        location ~* \.(?:css|js)$ {
            try_files $uri =404;
            expires 1y;
            access_log off;
            add_header Cache-Control "public";
            add_header Strict-Transport-Security "max-age=120; includeSubDomains" always;
        }

        # Any route containing a file extension (e.g. /devicesfile.js)
        location ~ ^.+\..+$ {
            try_files $uri =404;
        }
    }
}
